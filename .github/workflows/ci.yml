name: CI Pipeline

on:
  push:
    branches:
      - develop
      - feature/**
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: test
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install backend dependencies
        run: |
          cd backend
          pip install -r requirements.txt
          # Pin specific versions of testing dependencies and frameworks for compatibility
          pip install pytest==8.4.1 # Keep this as it's the version pytest itself found
          pip install httpx==0.24.0 # Known stable version compatible with older Starlette
          pip install starlette==0.27.0 # Pin Starlette
          pip install fastapi==0.95.0 # Pin FastAPI
          # You might also need uvicorn for running the app, but not strictly for testing
          # pip install uvicorn

      - name: Run backend tests
        env: # Use 'env' context for environment variables, often cleaner than 'export'
          PYTHONPATH: ${{ github.workspace }}/backend # Absolute path is more robust
        run: |
          cd backend # Change directory for pytest
          pytest

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Run frontend build (to validate)
        run: |
          cd frontend
          npm run build
